Смотри на огонь свечи, Диего, растирай свою шерстку благовониями, и впусти мудрость в царство своего духа 

*************************

package main 

import "fmt"

func main() {
    name := "Имя мне - Диего" 
    fmt.Println(name)
}

*************************

Всмотрись внимательно, неспеша 
Создай папку projects там, где душе твоей угодно будет 
Внутри нее сделай еще папку, название которой ты волен выбрать сам 
Открой ее в сакральном VS CODE и создай в ней файл main.go 
И затем воссоздай терминал 
Перепечатай в сей файл дарованное тебе знание 
И запусти код командой go run main.go 

Происходит здесь следующее
Минимально работоспособная программа требует особого ритуала - объявление пакета и функции main 
 
*************************

package main 

func main() {}

*************************

Сейчас у тебя только один файл, но скоро их будет все больше и больше 
Хаосом нельзя управлять - все принадлежности должны лежать на своем месте 
Пакет - способ связи разрозненных файлов 
Мы может объединить несколько файлов в один пакет 
В этом есть некоторый смысл:
1. Вместо того, чтобы бросать талисманы, ритуальные куклы, мелки для черчения кругов призыва в один ящик, 
   мы делаем для каждого типа предметов отдельный мешочек - package 
   Тогда мы сразу будем видеть, где что находится 
2. Предметы внутри пакета образуют единое информационное поле - это станет ясно на примере пакета fmt 

Что же означает вот эта строка? name := "Имя мне - Диего"

name - это переменная

В учебных заведениях для особо одаренных под переменной понимают коробку, в которой лежит какое-то значение 
Если быть ближе к железу, то переменная - это отдельная область в памяти компьютера (практически всегда это оперативнася память),
в которую при помощи нулей и единиц записывается некое значение
В данном случае переменная name - это область памяти, в которой хранится значение "Имя мне - Диего"

У каждой переменной есть тип данных - самые распространенные типы это строки и числа 
Значение строк прописывается в двойных кавычках. Примеры строк:
"Марина РСП" 
"Абылварг"
"Какой сегодня день" 

Кстати, "1" - это строка, а 1 - уже число. Ты же не отрицаешь, что теплое и мягкое - это совсем про разное. Да, Диего?

И последнее, что нам здесь нужно разобрать: fmt.Println(name)
fmt - это импортируемый пакет 
Внутри этого пакета есть масса файлов, но от нас это сокрыто 
Из пакета можно брать разные функции, связанные с форматированием выводимых в консоль данных, и самая популярная из них - Println
Собственно, функция - это кусок кода, который что-то делает и возвращает некое значение 
Если наведем мышкой на Println, то увидим следующее: func fmt.Println(a ...any) (n int, err error)
Это описание функции и возвращаемых ей значений 
В случае с пакетом fmt возвращаемое значение нам не нужно 
Уже скоро, Диего, ты будешь понимать что все это значит... 
А можно сказать, что функция - это черный ящик, которому ты скармливаешь данные и он что-то с ними делает 

И, кстати, запомни еще одно слово - синтаксис 
Это как правописание, только пишешь ты именно код
Синтаксис функции, синтаксис переменной... Слово ко всему в общем применимо 

