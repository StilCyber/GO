Шарик, Диего, шарик. Его сияние после первой медитации окрепло. 
Теперь плавно веди его от други к подушечкам лапки
Аккуратно подними лапку... и стреляй

Ха-ха, пока не получается, да? 

*************************
Переменные в go можно создавать разными способами, ранее я тебе показал короткий синтаксис :=
Теперь же посмотрим на еще один способ - с использованием ключевого слова var 

Допустим, мы хотим хранить имя жены:

var wife string 
wife = "Некая тян"

Здесь произошло следующее:
1. Объявление переменной - создание той самой коробочки (ключевое слово var, затем имя переменной wife, затем тип переменной - string, т.е. строка)
2. Инициализация переменной - первоначальное заполнение барахлом, в данном случае обозначением жены

И здесь немного казуистики 
Объявить переменную можно одновременно с ее инициализацией:
var wife = "Некая тян"

Однако, если мы просто объявим переменную, она все равно под капотом заполнится дефолтным значением в зависимости от типа данных - для string это будет пустая строка
Но это не инициализация, не путайте. Это другое...

Задается значение переменной с использованием оператора присваивания (=). Когда мы задаем значение в первый раз, это инициализация - дальше ну... ты понимаешь 

Обрати внимание на поток выполнения кода в примере ниже. Базово, он идет последовательно сверху вниз

*************************

func main() {
	var wife = "Некая тян"
	fmt.Println(wife)

	wife = "Кисуля"
	fmt.Println(wife)
}

*************************
В результате выполнения мы получим следующее:
Некая тян
Кисуля

После того, как мы изменили значение переменной, в консоль во второй раз вывелся уже новый результат

Имена переменных менять нельзя, значения можно
Объявление переменных с ключевым словом var отличается тремя вещами:
1. Нужно явно указывать тип данных 
2. Можно объявлять переменные без инициализации (тогда будет инициализация по дефолту - поговорим еще об этом)
3. Короткий синтаксис := доступен только внутри функций 

*************************
